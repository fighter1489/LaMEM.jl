var documenterSearchIndex = {"docs":
[{"location":"man/listfunctions/#List-of-all-functions","page":"List of functions","title":"List of all functions","text":"","category":"section"},{"location":"man/listfunctions/","page":"List of functions","title":"List of functions","text":"These are all functions that are available in the package:","category":"page"},{"location":"man/listfunctions/","page":"List of functions","title":"List of functions","text":"Modules = [LaMEM]","category":"page"},{"location":"#LaMEM.jl","page":"Home","title":"LaMEM.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is the julia interface to LaMEM, which does a number of handy things:","category":"page"},{"location":"","page":"Home","title":"Home","text":"It will automatically download a binary installation of LaMEM, along with the correct version of PETSc and mpiexec for your system. You can also use these binaries directly from your terminal, so you are not limited to julia. Gone are the days where you had to first spend hours or days to install PETSc on your system!\nWe provide a simple function to run LaMEM from julia (also in parallel).\nWe provide functions to read info from timesteps back into julia. ","category":"page"},{"location":"man/installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"man/installation/","page":"Installation","title":"Installation","text":"Installing LaMEM can simply be done through the package manager:","category":"page"},{"location":"man/installation/","page":"Installation","title":"Installation","text":"julia>]\npkg>add LaMEM","category":"page"},{"location":"man/installation/","page":"Installation","title":"Installation","text":"which will download the binaries along with PETSc and mpiexec for your system.","category":"page"},{"location":"man/installation/","page":"Installation","title":"Installation","text":"You can test if it works on your machine with","category":"page"},{"location":"man/installation/","page":"Installation","title":"Installation","text":"pkg> test LaMEM","category":"page"},{"location":"man/installation/","page":"Installation","title":"Installation","text":"If you also want to read LaMEM output files back to julia, you need to install the PythonCall package:","category":"page"},{"location":"man/installation/","page":"Installation","title":"Installation","text":"julia> ]\npkg> add PythonCall","category":"page"},{"location":"man/installation/#Running-LaMEM-from-julia","page":"Installation","title":"Running LaMEM from julia","text":"","category":"section"},{"location":"man/installation/","page":"Installation","title":"Installation","text":"Running LaMEM from within julia can be done with the run_lamem function:","category":"page"},{"location":"man/installation/","page":"Installation","title":"Installation","text":"LaMEM.run_lamem","category":"page"},{"location":"man/installation/#LaMEM.Run.run_lamem","page":"Installation","title":"LaMEM.Run.run_lamem","text":"run_lamem(ParamFile::String, cores::Int64=1, args:String=\"\")\n\nThis starts a LaMEM simulation, for using the parameter file ParamFile on cores number of cores.  Optional additional command-line parameters can be specified with args.\n\nExample:\n\nThe first step is to ensure that LaMEM_jll is installed on your system. You only need to do this once, or once LaMEM_jll is updated. \n\njulia> import Pkg\njulia> Pkg.add(\"LaMEM_jll\")\n\nNext you can call LaMEM with:\n\njulia> ParamFile=\"../../input_models/BuildInSetups/FallingBlock_Multigrid.dat\";\njulia> run_lamem(ParamFile)\n\nDo the same on 2 cores with\n\njulia> ParamFile=\"../../input_models/BuildInSetups/FallingBlock_Multigrid.dat\";\njulia> run_lamem(ParamFile, 2, \"-nstep_max = 1\")\n\n\n\n\n\n","category":"function"},{"location":"man/installation/#Running-LaMEM-from-outside-julia","page":"Installation","title":"Running LaMEM from outside julia","text":"","category":"section"},{"location":"man/installation/","page":"Installation","title":"Installation","text":"If you, for some reason, do not want to run LaMEM through julia but instead directly from the terminal or powershell, you will have to add the required dynamic libraries and executables. Do this with:","category":"page"},{"location":"man/installation/","page":"Installation","title":"Installation","text":"LaMEM.show_paths_LaMEM","category":"page"},{"location":"man/installation/#LaMEM.Run.show_paths_LaMEM","page":"Installation","title":"LaMEM.Run.show_paths_LaMEM","text":"show_paths_LaMEM()\n\nThe downloaded LaMEM binaries can also be called from outside julia (directly from the terminal).  In that case, you will need to set load correct dynamic libraries (such as PETSc) and call the correct binaries.\n\nThis function shows this for your system. \n\n\n\n\n\n","category":"function"}]
}
